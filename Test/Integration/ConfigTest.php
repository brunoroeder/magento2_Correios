<?php
namespace Weverson83\Correios\Test\Integration;

use Magento\Framework\App\Config;
use Magento\Framework\App\DeploymentConfig;
use Magento\Framework\App\Filesystem\DirectoryList;
use Magento\Framework\Component\ComponentRegistrar;
use Magento\Framework\Module\ModuleList;
use Magento\TestFramework\ObjectManager;

use Weverson83\Correios\Model\Carrier\Correios;

/**
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @author    Weverson Cachinsky <weversoncachinsky@gmail.com>
 * @group     Correios
 */
class ConfigTest extends \PHPUnit_Framework_TestCase
{
    private $moduleName = 'Weverson83_Correios';

    /** @var ObjectManager $objectManager */
    private $objectManager;

    public function setUp()
    {
        $this->objectManager = ObjectManager::getInstance();
    }

    public function testModuleIsRegistered()
    {
        $registrar = new ComponentRegistrar();
        $this->assertArrayHasKey($this->moduleName, $registrar->getPaths(ComponentRegistrar::MODULE));
    }

//    public function testModuleIsConfiguredAndEnabledInRealEnvironment()
//    {
//        $dirList = $this->objectManager->create(DirectoryList::class, ['root' => BP]);
//        $configReader = $this->objectManager->create(DeploymentConfig\Reader::class, ['dirList' => $dirList]);
//        $deploymentConfig = $this->objectManager->create(DeploymentConfig::class, ['reader' => $configReader]);
//
//        /** @var ModuleList $moduleList */
//        $moduleList = $this->objectManager->create(ModuleList::class, ['config' => $deploymentConfig]);
//
//        $this->assertTrue($moduleList->has($this->moduleName));
//    }

    public function testCarrierModelIsConfiguredProperly()
    {
        /** @var Config $config */
        $config = $this->objectManager->create(Config::class);
        $this->assertEquals(Correios::class, $config->getValue('carriers/correios/model'));
    }

    public function testFreeMethodGetItsValueFromConfig()
    {
        /** @var Config\ScopePool $scopePool */
        $scopePool = $this->objectManager->create(Config\ScopePool::class);
        $scopePool->getScope(Config\ScopeConfigInterface::SCOPE_TYPE_DEFAULT)
            ->setValue('carriers/correios/free_method', 'anyMethod');
        /** @var Config $config */
        $config = $this->objectManager->create(Config::class, ['scopePool' => $scopePool]);

        $this->assertEquals('anyMethod', $config->getValue('carriers/correios/free_method'));
    }
}
